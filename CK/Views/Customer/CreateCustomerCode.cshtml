@model CK.Models.TopSoft.CustomerCode
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Customer</title>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" type="text/css" href="~/css/Sales/main.css" />
</head>
<body>
    <div class="form-containerSales">
        <!-- Header Button -->
        <button class="btn Title">Create Customer</button>

        <!-- Form -->
        <form id="myForm" asp-controller="Customer" asp-action="CreateCustomerCode" method="post">
            <ul>
                <input type="hidden" asp-for="CustomerCode1" />
                <li class="fields">
                    <label asp-for="CustomerName">Customer Name</label>
                    <input asp-for="CustomerName" class="form-control" required />
                </li>
                <li class="fields">
                    <label asp-for="Phone1">Phone Number 1</label>
                    <input asp-for="Phone1" class="form-control" maxlength="11" required pattern="^[0-9]+$" />
                </li>
                <li class="fields">
                    <label asp-for="Phone2">Phone Number 2</label>
                    <input asp-for="Phone2" class="form-control" maxlength="11" pattern="^[0-9]+$" />
                </li>
                <li class="fields">
                    <label asp-for="Phone3">Phone Number 3</label>
                    <input asp-for="Phone3" class="form-control" maxlength="11" pattern="^[0-9]+$" />
                </li>
                <li class="fields">
                    <label for="ZoneName">Zone Name</label>
                    <select class="FilterSelect" asp-for="ZoneSerial" id="ZoneName" required>
                        <option value="0">All Zones</option>
                        @foreach (var zone in ViewBag.VBZone ?? Enumerable.Empty<Store>())
                        {
                            <option value="@zone.Serial">@zone.Name</option>
                        }
                    </select>
                </li>
                <li class="fields">
                    <label for="AreaName">Area Name</label>
                    <select class="FilterSelect" asp-for="AreaSerial" id="AreaName" required>
                        <option value="0">All Areas</option>
                    </select>
                </li>
                <li class="fields">
                    <label for="StreetName">Street Name</label>
                    <select class="FilterSelect" asp-for="StreetSerial" id="StreetName" required>
                        <option value="0">All Streets</option>
                    </select>
                </li>
                <li class="fields">
                    <label asp-for="Address1">Address 1</label>
                    <input asp-for="Address1" class="form-control" />
                </li>
                <li class="fields">
                    <label asp-for="Address2">Address 2</label>
                    <input asp-for="Address2" class="form-control" />
                </li>
                <li class="fields">
                    <label asp-for="Notes">Notes</label>
                    <input asp-for="Notes" class="form-control" />
                </li>
            </ul>

            <!-- Buttons -->
            <button type="submit" id="saveButton" class="btn btn-primary">Save</button>
            <a asp-controller="Customer" asp-action="GetAllCustomerCodes" class="btn btn-primary">Display Customers</a>
        </form>
    </div>
    <script>
        var success = '@TempData["Check"]';
        if (success === "T") {
            window.addEventListener('load', function () {
                Swal.fire({
                    title: "This Customer Already Exist",
                    icon: "error",
                    timer: 6500
                });
            });
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const saveButton = document.getElementById('saveButton');
            const form = document.getElementById('myForm');

            saveButton.addEventListener('click', function (event) {
                // Prevent default behavior
                event.preventDefault();

                // Get form field values
                const customerName = document.getElementById('CustomerName').value.trim();
                const phone1 = document.getElementById('Phone1').value.trim();
                const zoneName = document.getElementById('ZoneName').value;
                const areaName = document.getElementById('AreaName').value;
                const streetName = document.getElementById('StreetName').value;

                // Validation
                if (!customerName) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Validation Error',
                        text: 'Customer Name is required.',
                    });
                    return;
                }

                if (!phone1 || !/^[0-9]+$/.test(phone1) || phone1.length !== 11) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Validation Error',
                        text: 'Valid Phone Number 1 is required (11 digits, numbers only).',
                    });
                    return;
                }

                if (zoneName === "0") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Validation Error',
                        text: 'Zone Name is required.',
                    });
                    return;
                }

                if (areaName === "0") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Validation Error',
                        text: 'Area Name is required.',
                    });
                    return;
                }

                if (streetName === "0") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Validation Error',
                        text: 'Street Name is required.',
                    });
                    return;
                }

                // If validation passes, submit the form
                Swal.fire({
                    icon: 'success',
                    title: 'Validation Passed',
                    text: 'All required fields are valid!',
                    timer: 1000,
                }).then(() => {
                    form.submit(); // Submit the form after validation passes
                });
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const zoneDropdown = document.getElementById("ZoneName");
            const areaDropdown = document.getElementById("AreaName");
            const streetDropdown = document.getElementById("StreetName");

            // Handle Zone selection
            zoneDropdown.addEventListener("change", function () {
                const selectedZone = this.value;

                if (selectedZone && selectedZone !== "0") {
                    fetch(`/Customer/GetFilteredArea?zone=${selectedZone}`)
                        .then(response => response.json())
                        .then(data => {
                            areaDropdown.innerHTML = '<option value="0">All Areas</option>';
                            streetDropdown.innerHTML = '<option value="0">All Streets</option>'; // Reset streets
                            data.forEach(area => {
                                const option = document.createElement("option");
                                option.value = area.serial;
                                option.textContent = area.name;
                                areaDropdown.appendChild(option);
                            });
                        })
                        .catch(error => {
                            console.error("Error fetching areas:", error);
                        });
                } else {
                    areaDropdown.innerHTML = '<option value="0">All Areas</option>';
                    streetDropdown.innerHTML = '<option value="0">All Streets</option>';
                }
            });

            // Handle Area selection
            areaDropdown.addEventListener("change", function () {
                const selectedZone = zoneDropdown.value;
                const selectedArea = this.value;

                if (selectedArea && selectedArea !== "0") {
                    fetch(`/Customer/GetFilteredSteet?zone=${selectedZone}&area=${selectedArea}`)
                        .then(response => response.json())
                        .then(data => {
                            streetDropdown.innerHTML = '<option value="0">All Streets</option>';
                            data.forEach(street => {
                                const option = document.createElement("option");
                                option.value = street.serial;
                                option.textContent = street.name;
                                streetDropdown.appendChild(option);
                            });
                        })
                        .catch(error => {
                            console.error("Error fetching streets:", error);
                        });
                } else {
                    streetDropdown.innerHTML = '<option value="0">All Streets</option>';
                }
            });
        });

    </script>

</body>
</html>

