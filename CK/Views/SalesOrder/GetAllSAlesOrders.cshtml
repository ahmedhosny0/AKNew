@model List<CK.DTO.SalesOrderDTO>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Order Details</title>
    <link rel="stylesheet" type="text/css" href="~/css/Sales/main.css" />
    <style>
        .main-footer {
            display: none;
        }
    </style>
</head>
<body>
    <div class="header-container">
        <h2 class="header-title">Sales Order Details</h2>
    </div>
    <div class="row" style="display: block; margin:0 1px">
        <div class="col-md-3">
            <div class="card card-primary collapsed-card" style="width:1500px" id="filterCard">
                <div class="card-header card-title" data-card-widget="collapse" style="color: #034C96;border:1px solid #0000004d;background-color:#0000000f">
                    <h3 class="card-title">Filtering</h3>
                    <div class="card-tools">
                    </div>
                </div>
                <div class="card-body" style="display:block; padding: 20px;transition:max-height 5s ease-in-out;">
                            <form id="myform" asp-action="GetAllSalesOrders" asp-controller="SalesOrder" method="post">
                        <li class="Displayliselect">
                            <label>Zone</label>
                            <br>
                            <select class="FilterSelect form-control" id="Storelist" name="sales.Zone" asp-items="@(new SelectList(ViewBag.VBZone,"Serial","Name"))">
                                <option value="0">All Zone</option>
                            </select>
                        </li>
                        <li class="Displayliselect">
                            <label>Branch</label>
                            <br>
                            <select class="FilterSelect form-control" id="Storelist" name="sales.Branch" asp-items="@(new SelectList(ViewBag.VBBranch,"Serial","BranchName"))">
                                <option value="0">All Branch</option>
                            </select>
                        </li>
                                <li class="Displayliselect">
                                    <label>Customer:</label>
                                    <br>
                                    <select class="FilterSelect form-control" id="Storelist" name="sales.Customer" asp-items="@(new SelectList(ViewBag.VBCustomers,"CustomerCode1","CustomerName"))">
                                        <option value="0">All Customers</option>
                                    </select>
                                </li>
                        <li class="Displayliselect">
                            <label>Invoice Number</label>
                            <br>
                            <input type="text"  name="sales.InvoiceNumber" class="form-control" style="width:200px;display:inline-block">
                        </li>
                                <li class="Displayliselect">
                                    <label>Date From:</label>
                                    <br>
                                    <input type="date" id="startDate" name="sales.StartDate" class="form-control" style="width:200px;display:inline-block">
                                </li>
                                <li class="Displayliselect">
                                    <label>Date To:</label>
                                    <br>
                                    <input type="date" id="endDate" name="sales.EndDate" class="form-control" style="width:200px;display:inline-block">
                                </li>
                                <img id="lo" src="/images/load.gif" alt="" />
                                <div class="form-buttons">
                                        <button type="submit" id="DisplayButton" class="btn btn-primary">Display Report</button>
                                </div>
                            </form>
                </div>
            </div>
        </div>
    </div>
    <table id="salesOrderTable" class="display table table-striped table-bordered" style="display:none;">
        <thead>
            <tr>
                <th>HSalesCode</th>
                <th>HSalesCode2</th>
                <th>Customer Name</th>
                <th>Category</th>
                <th>Grand Total</th>
                <th>Grand Total (With Fees)</th>
                <th>Sales Order Date</th>
                <th>Notes</th>
                <th>Item Code</th>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
        </thead>
            <tbody>
                <!-- Rows will be populated dynamically -->
            </tbody>
        </table>
    <script src="/js/jquery-3.5.1.min.js"></script>
    <script src="/js/jquery.dataTables.min.js"></script>
    <script src="/js/dataTables.buttons.min.js"></script>
    <script src="/js/jszip.min.js"></script>
    <script src="/js/buttons.html5.min.js"></script>
    <script src="/js/pdfmake.min.js"></script>
    <script src="/js/vfs_fonts.js"></script>
    <script>
        var username = '@ViewBag.Username';
        const table = $('#salesOrderTable').DataTable({
                searching: true,
                paging: true,
                pageLength: 10,
                lengthChange: true,
                info: true,
                autoWidth: false,
                responsive: true,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: 'Export to Excel',
                        className: 'btn btn-success',
                    }
                ],
                columnDefs: [
                    { targets: '_all', className: 'text-center' }
                ]
            });

            // Handle form submission
            $('#myform').on('submit', function (e) {
                e.preventDefault(); // Prevent default form submission

                const formData = $(this).serialize(); // Serialize form data
                let timerInterval; // Declare timer interval variable

                // Show SweetAlert loader
                Swal.fire({
                    title: `Dear, ${username}, Wait Report`,
                    html: "Wait Report will be shown in <b></b> milliseconds.",
                    timer: 1000000, // Set a large timer (adjust as needed)
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                        const timer = Swal.getHtmlContainer().querySelector("b");
                        timerInterval = setInterval(() => {
                            timer.textContent = Swal.getTimerLeft();
                        }, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                });

                // Perform AJAX request
                $.ajax({
                    url: '/SalesOrder/GetAllSalesOrders',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        console.log('AJAX Response:', response);

                        if (Array.isArray(response)) {
                            // Clear existing rows in the DataTable
                            table.clear();

                            // Populate the table with the response data
                            response.forEach(item => {
                                table.row.add([
                                    item.hSalesCode || '',
                                    item.hSalesCode2 || '',
                                    item.customerName || '',
                                    item.categoryName || '',
                                    item.grandTotal || '',
                                    item.grandTotalWithFees || '',
                                    item.salesOrderDate || '',
                                    item.notes || 'N/A',
                                    item.itemCode || '',
                                    item.itemName || '',
                                    item.price || '',
                                    item.quantity || '',
                                    item.total || ''
                                ]);
                            });

                            // Redraw the DataTable
                            table.draw();
                        $('#salesOrderTable').show();

                        // Close the SweetAlert once the data is loaded
                            Swal.close();

                            // Show a success message
                            Swal.fire({
                                title: "Sales Orders Loaded!",
                                icon: "success",
                                timer: 3000
                            });
                        } else {
                            console.error('Response is not an array. Check the backend response format.');

                            // Show an error message and close the SweetAlert
                            Swal.fire({
                                title: "Failed to load sales orders!",
                                icon: "error",
                                timer: 3000
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', error);

                        // Show an error message and close the SweetAlert
                        Swal.fire({
                            title: "Failed to load sales orders!",
                            icon: "error",
                            timer: 3000
                        });
                    }
                });
            });
        

    </script>


    <script>
        var success = '@TempData["Check"]';
        if (success === "T") {
            window.addEventListener('load', function () {
                Swal.fire({
                    title: "There are Transactions",
                    icon: "error",
                    timer: 6500
                });
            });
        }
    </script>
    <script>
        var success = '@TempData["SuccessMessage"]';
        if (success === "Sales Order has been successfully Updated!") {
            window.addEventListener('load', function () {
                Swal.fire({
                    title: "Good, You Update Invoice Successfully",
                    icon: "success",
                    timer: 6500
                });
            });
        }
    </script>
    
</body>
</html>