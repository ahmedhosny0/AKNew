@model CK.Models.TopSoft.StreetCode
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Example</title>
    <link rel="stylesheet" type="text/css" href="~/css/Sales/main.css" />

</head>
<body>
    <div class="form-containerSales">
        <!-- Header Button -->
        <button class="btn Title">Create Street</button>
    <form id="myForm" asp-controller="Street" asp-action="CreateStreetCode" method="post">
        <ul>
            <input type="hidden" asp-for="Serial" />
            <li class="fields">
                <label asp-for="Code">Code</label>
                <input asp-for="Code" class="form-control" style="width:250px" value="@ViewBag.VBMaxCode" readonly />
            </li>
            <li class="fields">
                <label asp-for="Name">Name</label>
                <input asp-for="Name" class="form-control" style="width:250px" required  />
            </li>
            <li class="fields">
                <label for="ZoneName">Zone Name:</label>
                <select class="FilterSelect form-control" asp-for="ZoneSerial" id="ZoneName" required>
                    <option value="0">All Zones</option>
                    @foreach (var zone in ViewBag.VBZone ?? Enumerable.Empty<Store>())
                    {
                        <option value="@zone.Serial">@zone.Name</option>
                    }
                </select>
            </li>
            <li class="fields">
                <label for="AreaName">Area Name:</label>
                <select class="FilterSelect form-control" asp-for="AreaSerial" id="AreaName" required>
                    <option value="0">All Areas</option>
                </select>
            </li>
            <li class="fields">
                <label for="AreaName">Branch Name:</label>
                <select class="FilterSelect form-control" asp-for="BranchSerial" id="BranchName" asp-items="@(new SelectList(ViewBag.VBBranch,"Serial","BranchName"))" required>
                    <option value="0">All Branches</option>
                </select>
            </li>
            <li class="fields">
                <label asp-for="ServiceCost">ServiceCost</label>
                <input asp-for="ServiceCost" class="form-control" style="width:250px" required/>
            </li>
            <li class="fields">
                <label asp-for="DeliveryTime">DeliveryTime</label>
                <input asp-for="DeliveryTime" class="form-control" style="width:250px" required />
            </li>
        </ul>
        <button type="submit" id="saveButton" class="btn btn-primary">Create Street</button>
        <a asp-controller="Street" asp-action="GetAllStreetCodes" class="btn btn-primary">Display Streets</a>
    </form>
    </div>
    <script>
        var success = '@TempData["SuccessMessage"]';
        if (success === "success") {
            window.addEventListener('load', function () {
                Swal.fire({
                    title: "Good, You Create Street Successfully",
                    icon: "success",
                    timer: 6500
                });
            });
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const saveButton = document.getElementById('saveButton');

            saveButton.addEventListener('click', function (event) {
                event.preventDefault();
                // Validate the form
                if (document.getElementById('myForm').checkValidity()) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Validated',
                        text: 'All validations passed. Proceeding to save...',
                        timer: 1000,
                        timerProgressBar: true,
                        willClose: () => {
                            document.getElementById('myForm').submit();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Validation Error',
                        text: 'Please fill out all required fields correctly.',
                        timer: 2000,
                        timerProgressBar: true
                    });
                }
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const zoneDropdown = document.getElementById("ZoneName");
            const areaDropdown = document.getElementById("AreaName");
            // Handle Zone selection
            zoneDropdown.addEventListener("change", function () {
                const selectedZone = this.value;

                if (selectedZone && selectedZone !== "0") {
                    fetch(`/Street/GetFilteredArea?zone=${selectedZone}`)
                        .then(response => response.json())
                        .then(data => {
                            areaDropdown.innerHTML = '<option value="0">All Areas</option>';
                            data.forEach(area => {
                                const option = document.createElement("option");
                                option.value = area.serial;
                                option.textContent = area.name;
                                areaDropdown.appendChild(option);
                            });
                        })
                        .catch(error => {
                            console.error("Error fetching areas:", error);
                        });
                } else {
                    areaDropdown.innerHTML = '<option value="0">All Areas</option>';
                }
            });
        });

    </script>

</body>
</html>

