@model SalesParameters
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .main-footer {
        position: absolute !important;
        display:none;
    }
   
</style>
@* <p>@ViewBag.Role</p>
 *@
<!Doctype html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="/css/datatables.min.css" />
    <link rel="stylesheet" type="text/css" href="/js/datatables.min.css" />
    <script src="/plugins/chart.js/Chart.js"></script>
    <script src="/js/jquery.min.js"></script>
    <script src="/js/plotly-latest.min.js"></script>

   <style>
        .main-footer {
            position: relative !important;
        }

        li {
            display: inline-block;
        }

        .AnalysisCard {
            width: 250px;
        }

        .card-title {
            font-weight: bold;
        }

        .maincards {
            list-style: none;
            padding: 2%;
            width: 1000px;
            margin-left: 50%;
        }

        .icon {
            font-size: 38px;
        }

        .main-footer {
            display: relative !important;
        }
 .selected-item {
    display: inline-block;
    background-color: #f1f1f1;
    padding: 0 10px;
    margin-right: 5px;
    border-radius: 5px;
} 

.selected-item .remove-item {
    cursor: pointer;
    color: red;
    margin-left: 5px;
}

.placeholder {
    color: #888;
}
 .chart-container {
            display: flex;
            justify-content: center;
            gap: 20px;
        }
         .FilterSelect[placeholder]:empty:before {
            content: attr(placeholder);
            color: #888;
        }

        .FilterSelect:focus {
            outline: none;
        }
    </style>

   
  @*   <script>
        var username = '@ViewBag.Username';
    // Listen for the load event on the window object
    window.addEventListener('load', function () {
    // Use SweetAlert2 to display the alert
    Swal.fire({
    icon: "success",
                title: "Welcome " + username+" To TopSoft APP.",
    showConfirmButton: false,
    timer: 3500
    });
    });
    </script>  *@
</head>
<body style="background-color:white !important;">
    <section class="content" style="margin:1%; background-color:white !important;" id="all">
        <div class="row">
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h4></h4>
@*                         <h4>@ViewBag.StoreName</h4>
 *@
                        <h4>Top Branches in Circle K</h4>
                    </div>
                    <div class="icon">
                        <i class="ion ion-bag"></i>
                    </div>
                    <a href="#" class="small-box-footer">TopSoft App-CircleK <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            @* <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h4>@ViewBag.TotalSales</h4>

                        <p>Sales last 5 Months</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-stats-bars"></i>
                    </div>
                    <a href="#" class="small-box-footer">TopSoft App <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div> *@
            <!-- ./col -->
            <div class="col-lg-3 col-6" id="show">
                <!-- small box -->
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3 id="countdown3" style="color:white;display:inline;margin-right:4%;"></h3><i style="color:white" class='fas icon'>&#xf54f;</i>
                        <p style="color:white;">Branches</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    <a href="/Home/Dashboard" class="small-box-footer">Go to Syslog <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6" id="show2">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3 id="countdown2" style="display:inline;margin-right:4%;"></h3><i style="color:white" class="fa fa-user icon"></i>
                        <p>Unique Users</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                    <a href="/Home/Dashboard" class="small-box-footer">Go to Syslog <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-warning" id="show1">
                    <div class="inner">
                        <h3 id="countdown" style="display:inline;margin-right:4%;">@ViewBag.Userslogin</h3><i class="fa icon">&#xf090;</i>
                        <p>Total login</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                    <a href="/Home/Dashboard" class="small-box-footer">Go to Syslog <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
        </div>

   @*  @if (Model != null && Model.Cat)
{
<input type="checkbox" name="Parobj.Cat" value="true" />
} *@

            <canvas id="myChart" style="width:100%;max-width:600px"></canvas>

            <canvas id="myChart2" style="width:100%;max-width:600px"></canvas>
 <canvas id="myChart1" style="position:absolute; width:100%;max-width:950px;margin:auto;right:2%; top:30%;height:500px;"></canvas>
 <div id="myPlot" style="width:100%;max-width:700px;float:right;margin-top: 0%;"></div>

 <div id="show4" >
        <form id="myForm" asp-action="Home1" asp-controller="Home" method="get">
                                                    <ul style="list-style: none;">     
                                                        
                                                            <li>
                                                                <h5 style="font-style: italic;background-color: #fff3f3;width: 160px;font-size: large;">Display in Chart</h5>
                                                         <input type="checkbox" value="true" name="Parobj.VFranchise" id="VFranchise">
                                                        <label for="VFranchise">Franchise</label>
                                                        <input type="checkbox" value="true" name="Parobj.VPerYear" id="VPerYear">
                                                        <label for="VPerYear">Year(2023-2024)</label>
                                                        <input type="checkbox" value="true" name="Parobj.VPerMon" id="VPerMon">
                                                        <label for="VPerMon">Year / Month</label>
                                                        <input type="checkbox" value="true" name="Parobj.Area" id="VArea">
                                                        <label for="VArea">Area</label>
                                                        <br>
                                                        <input type="checkbox" value="true" name="Parobj.VStoreName" id="VStoreName">
                                                        <label for="VStoreName">Branches</label>
                                                        <input type="checkbox" value="true" name="Parobj.VDepartment" id="VDepartment">
                                                        <label for="VDepartment">Category Name</label>
                                                    </li>
                                                    <br />
                                                         <h5 style="font-style: italic;background-color: #fff3f3;width: 160px;font-size: large;">Filter Data</h5>
                                                         <li class="Displayli">
                                                                                                                 <label>Year:</label>
                                                                <select class="FilterSelect form-control" name="Parobj.YearinDash" id="YearinDash">
                                                                   <option>All</option>
                                                                <option value="2024">2024</option>
                                                                <option value="2023">2023</option>
                                                            </select>
                                                            </li>
                                                        <li class="Displayli">
                                                            <label>Franchise:</label>
                                                            <br>
                                                            <select class="FilterSelect form-control" name="Parobj.Franchise" id="Franchise">
                                                                <option>ALL</option>
                                                                <option>TMT</option>
                                                                <option>SUB-FRANCHISE</option>
                                                            </select>
                                                        </li>
                                                        <br />
                                                        <li class="Displayliselect" style="width:180px">
<div class="multi-select-dropdown2 Store-dropdown">
                                                                <label>Store Name:</label>
                                                                <div class="dropdown ">
        <div id="searchBoxStore" contenteditable="true"class="FilterSelect form-control" placeholder="ALL Branches"></div>
                                                                    <div class="dropdown-menu Storedropdown fixed-height-dropdown" style="padding:   6px;font-size:   16px;" aria-labelledby="dropdownMenuButton">
                                                                        <!-- Checkboxes will be generated here -->
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" value="0" id="all">
                                                                            <label class="form-check-label"style="padding : 0.7% 0" for="all">
                                                                                All Stores
                                                                            </label>
                                                                        </div>
                                                                        @foreach (var store in ViewBag.VBStore ?? Enumerable.Empty<Store>())
                                                                        {
                                                                            if (store != null)
                                                                            {
                                                                                <div class="form-check">
                                                                                    <input class="form-check-input" type="checkbox" value="@store.Store" id="@store.Store">
                                                                                    <label class="form-check-label" style="padding : 0.7% 0" for="@store.Store">
                                                                                        @store.Name
                                                                                    </label>
                                                                                </div>
                                                                            }
                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            </li>
                                                        <input type="hidden" id="selectedStores" name="Parobj.Store">
                                                         <li class="Displayliselect" style="width:180px">
    <div class="multi-select-dropdown department-dropdown">
    <label>Category Name:</label>
    <div class="dropdown">
                <div id="searchBoxdp" contenteditable="true"class="FilterSelect form-control" placeholder="ALL Categories"></div>
@*         <div id="searchBoxdp" class="search-box" placeholder="All Departments"></div>
 *@        <div class="dropdown-menu dp fixed-height-dropdown" style="padding: 6px; font-size: 16px;" aria-labelledby="dropdownMenuButton">
            <!-- Checkboxes will be generated here -->
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="0" id="all">
                <label class="form-check-label" style="padding: 0.7% 0" for="all">All Categories</label>
            </div>
                 @foreach (var departmentName in ViewBag.VBDepartment ?? Enumerable.Empty<string>())
                {
                    if (!string.IsNullOrEmpty(departmentName))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="@departmentName" id="@departmentName">
                            <label class="form-check-label" style="padding: 0.7% 0" for="@departmentName">
                                @departmentName
                            </label>
                        </div>
                    }
                }
             </div>
         </div>
     </div>
 </li>
 <input type="hidden" id="selectedDepartment" name="Parobj.Department" />
                                                         </ul>

    <li class="Displayli">
 @* <input type="checkbox" id="Category" name="Parobj.Cat" value="true">
<label for="Category"> Category</label> *@
<input type="checkbox" id="Store" name="Parobj.Storef" value="true" style="display:none">
<label for="Store" style="display:none"> Store</label> 
    <input type="submit" value="Display" />
</form>


            <div id="salesReportTableWrapper" style="margin:1%;margin-top:12%;">
                <script src="/js/sweetalert2@11"></script>
                @if (ViewBag.Data != null)
                {
                    <script>
                        Swal.fire({
                            title: "Good, You Display Report Successfully",
                            icon: "success",
                            timer: 5500
                        });
                        </script>
                    <ul>
                        @if (@ViewBag.VTotalSales != null)
                        {
                            <li class="Displayliselect" style="float: right;margin-right: 5%; text-align: center;">
                                <label>Total Sales</label>
                                <br>
                                <input type="button" class="form-control" style="font-weight:bold; width:200px;display:inline-block" value="@ViewBag.Total">
                            </li>
                        }
                        @* <li class="Displayliselect" style="float: right;margin-right: 5%; text-align: center;">
                            <label>Total Transactions</label>
                            <br>
                            <input type="button" class="form-control" style="width:200px;display:inline-block" value="@ViewBag.Transactions">
                        </li> *@
                    </ul>
                    <table id="example" class="table" style="width:93%;">
                        <thead>
                            <tr style="background-color: #a60f0f;color: #ffffffc7;">
                                 @if (@ViewBag.VPerYear != null)
                                {
                                    <th>Year  <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                }
                                @if (@ViewBag.Mon != null )
                                {
                                    <th>Month  <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                    <th>ArMonth  <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                }
                               @if (@ViewBag.VArea != null)
                                                               {
                                    <th>Area  <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                }
                                @if (@ViewBag.VStoreName !=null )
                                {
                                    <th>Store Name  <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                }
                                @if (@ViewBag.VDepartment !=null )
                                {
                                    <th>Department Name <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                }
                                @if (@ViewBag.VFranchise !=null )
                                {
                                    <th>Franchise  <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                }
                                @if (@ViewBag.VTotalSales !=null )
                                {
                                    <th>TotalSales  <i style="font-size:16px" class="fa">&#xf0dc;</i></th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < ViewBag.Data.Count; i++)
                            {
                                var dr = ViewBag.Data[i];
                                <tr>
                                    @if (@ViewBag.VPerYear != null)
                                    {
                                        <td>@dr.ByYear</td>
                                    }
                                @if (@ViewBag.Mon != null )
                                    {
                                        <td>@dr.ByMonth  </td>
                                        <td>@dr.Dmanager  </td>
                                    }
                                    @if (@ViewBag.VArea != null)
                                    {
                                        <td>@dr.Fmanager  </td>
                                    }
                                    @if (@ViewBag.VStoreName != null)
                                    {
                                        <td>@dr.StoreName  </td>
                                    }
                                    @if (@ViewBag.VDepartment != null)
                                    {
                                        <td>@dr.DpName  </td>
                                    }
                                    @if (@ViewBag.VFranchise != null)
                                    {
                                        <td>@dr.StoreFranchise  </td>
                                    }
                                    @if (@ViewBag.VTotalSales != null)
                                    {
                                        <td>@dr.FTotalSales  </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
    <br />   <br />
 </div>
 <p>@ViewBag.TotalTmt</p>
 <p>@ViewBag.TotalSub</p>
  
     </section>
    <script src="/js/sweetalert2@11"></script>
    <script>
const xArray = ["2023", "2024"];
const yArray = [@ViewBag.Branch2023, @ViewBag.Branch2024];

const layout = {title:"Opened Branches in first 6 months 2023,2024"};

const data = [{labels:xArray, values:yArray, type:"pie"}];

Plotly.newPlot("myPlot", data, layout);
</script>

@*      <script>
function updateSelectedStores() {
    var selectedValues = Array.from(document.querySelectorAll('.Storedropdown .form-check-input:checked')).map(input => input.value);
    document.getElementById('selectedStores').value = selectedValues.join(',');
                submitExportForm(); // Submit the export form
}

// Attach event listeners to all checkboxes within .Storedropdown
document.querySelectorAll('.Storedropdown .form-check-input').forEach(function(checkbox) {
    checkbox.addEventListener('change', updateSelectedStores);
});

// Initial update in case any checkboxes were already selected
updateSelectedStores();

// Event listener for the form submission
$('#myForm').on('submit', function(e) {
    // Call updateSelectedStores to ensure the hidden input is up-to-date
    updateSelectedStores();
    // Proceed with form submission
}); 
         </script>   *@
@*          <script>
function updateSelectedStores() {
  *@va@* electedValues = Array.from(document.querySelectorAll('.dp .form-check-input:checked')).map(input => input.value);
    document.getElementById('selectedDepartment').value = selectedValues.join(',');
                submitExportForm(); // Submit the export form
}

// Attach event listeners to all checkboxes within .Storedropdown
document.querySelectorAll('.dp .form-check-input').forEach(function(checkbox) {
    checkbox.addEventListener('change', updateSelectedStores);
});

// Initial update in case any checkboxes were already selected
updateSelectedStores();

// Event listener for the form submission
$('#myForm').on('submit', function(e) {
    // Call updateSelectedStores to ensure the hidden input is up-to-date
    updateSelectedStores();
    // Proceed with form submission
});
         </script>  *@
  <script>
        let Store = document.getElementById('VStoreName');
        let Category = document.getElementById('VDepartment');
        let Franchise = document.getElementById('VFranchise');
        let PerYear = document.getElementById('VPerYear');
        let Area = document.getElementById('VArea');
        let PerMon = document.getElementById('VPerMon');
        let myForm = document.getElementById('myForm');
        // // Event listener for the Display button
        Store.addEventListener('click', function (event) {
           // exportButton.disabled = true;
            submitExportForm(); // Submit the export form
        });
        // Event listener for the Export button
        Category.addEventListener('click', function (event) {
          //  exportButton.disabled = true;
            submitExportForm(); // Submit the export form
        });
                
        Franchise.addEventListener('click', function (event) {
          //  exportButton.disabled = true;
            submitExportForm(); // Submit the export form
        });       
        PerYear.addEventListener('click', function (event) {
          //  exportButton.disabled = true;
            submitExportForm(); // Submit the export form
        });          
        Area.addEventListener('click', function (event) {
          //  exportButton.disabled = true;
            submitExportForm(); // Submit the export form
        });
         PerMon.addEventListener('click', function (event) {
          //  exportButton.disabled = true;
            submitExportForm(); // Submit the export form
        });
        // Event listener for the cancel export button
        // Assuming cancelExportButton is defined elsewhere in your script
        cancelExportButton.addEventListener('click', function (event) {
            event.preventDefault();
            cancelExport(); // Call the cancelExport function
        });

        // Function to handle export submission
        function submitExportForm() {
            myForm.submit(); // Submit the export form

            // Set up an interval to check export status periodically
        }

    </script>
<script>
    var supplierNames = ["TMT", "Sub-Franchise"];
    var supplierNames2 = ["2024", "2023"];
    var supplierSales = [@ViewBag.TotalTmt, @ViewBag.TotalSub];
    
    var SupplierName = [];
    var storeSales = [];

    @if (ViewBag.Data != null)
    {
        @foreach (var item in ViewBag.Data)
        {
            <text>SupplierName.push("@item.SupplierName");</text>
            <text>storeSales.push("@item.TotalSales");</text>
        }
    }

    console.log(supplierNames, supplierSales); // Debugging lines, remove in production
    console.log(SupplierName, storeSales); // Debugging lines, remove in production

    const barColors = ["#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797","#b91d47", "#2b5797"];

    new Chart("myChart", {
        type: "doughnut",
        data: {
            labels: supplierNames,
            datasets: [{
                backgroundColor: barColors,
                data: supplierSales
            }]
        },
        options: {
            title: {
                display: true,
                text: "Sales of CircleK 2023 Vs 2024 by Supplier"
            }
        }
    });
new Chart("myChart2", {
        type: "pie",
        data: {
            labels: supplierNames2,
            datasets: [{
                backgroundColor: barColors,
                data: storeSales
            }]
        },
        options: {
            title: {
                display: true,
                text: "Sales of CircleK 2023 Vs 2024 by Supplier"
            }
        }
    });
    new Chart("myChart1", {
        type: "bar",
        data: {
            labels: SupplierName,
            datasets: [{
                backgroundColor: barColors,
                data: storeSales,
                barPercentage: 1.25 // Apply barPercentage here
            }]
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: "Sales of CircleK 2023 Vs 2024 by Store"
            }
        }
    });
</script>     <script src="/js/jquery-3.5.1.min.js"></script>
    <script src="/js/jquery.dataTables.min.js"></script>
    <script src="/js/dataTables.buttons.min.js"></script>
    <script src="/js/jszip.min.js"></script>
    <script src="/js/buttons.html5.min.js"></script>
    <script src="/js/pdfmake.min.js"></script>
    <script src="/js/vfs_fonts.js"></script>
    <script>
        var table = $('#example').DataTable({
            pageLength: 20,
            lengthChange: true,
            dom: 'Bfrtip', // This keeps the buttons in the DataTables control
            buttons: [
                {
                    extend: 'excelHtml5',
                    text: 'Export To Excel',
                    className: 'export-excel-button' // Add a class for easier selection later
                }
            ]
        });

        // After initializing the table, manually move the Excel export button to the top
        $('.export-excel-button').detach().prependTo($('#example_wrapper'));

        // Initialize the table again after moving the button
        table.buttons().container().appendTo('#example_wrapper');
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var countdownElements = [document.getElementById('countdown2'), document.getElementById('countdown3')];
            var targetNumbers = [@ViewBag.Users, @ViewBag.ItemName]; // Assuming these are defined somewhere in your server-side code
            var timeLeftArrays = [];

            // Initialize arrays for time left tracking
            for (var i = 0; i < countdownElements.length; i++) {
                timeLeftArrays[i] = 0; // Starting at 0 for each countdown
            }

            // Function to update the countdown display for all elements
            function updateCountdown() {
                for (var i = 0; i < countdownElements.length; i++) {
                    if (timeLeftArrays[i] <= targetNumbers[i]) {
                        countdownElements[i].textContent = timeLeftArrays[i];
                        timeLeftArrays[i]++;
                    } else {
                        clearInterval(countDownTimers[i]); // Clear interval for each countdown separately
                        countdownElements[i].textContent = targetNumbers[i];
                    }
                }
            }

            // Start the countdown for each element
            var countDownTimers = [];
            for (var i = 0; i < countdownElements.length; i++) {
                countDownTimers[i] = setInterval(function () { updateCountdown(); }, 30); // Update every 10 milliseconds for a quick count up
            }
        });
    </script>
    <canvas id="myChart" style="width:100%;max-width:600px"></canvas>

    <script>
        const xValues = [@ViewBag.StoreName];
        const yValues = [@ViewBag.TotalSales];
        const barColors = ["red"];
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var role = '@ViewBag.Role';
            var username = '@ViewBag.Username';
            var Password = '@ViewBag.Password';
            var isUsername = '@ViewBag.isUsername';
            $('#show4').hide();
              $('#show').hide();
                $('#show2').hide();
                $('#show1').hide();
            if (username === "dev") {
                $('#show').show();
                $('#show2').show();
                $('#show1').show();
                $('#show4').show();
            }           
            else if (username === "Admin" || username === "AK"  || username === "dev") {
                $('#show').show();
                $('#show2').show();
                $('#show1').show();
                                $('#show4').show();
            }
            // else if (isUsername === 'True') {
            //     $('#show').hide();
            //     $('#show2').hide();
            //     $('#show1').hide();
            // }
            else {
                $('#all').hide();
            }
        });
    </script>
    <script>
        var initialSearchContent = "";

        function updateSelectedStores() {
            var storeCheckboxes = document.querySelectorAll('.multi-select-dropdown2 .form-check-input');
            var selectedStores = [];
            var selectedStoreLabels = [];

            storeCheckboxes.forEach(function (checkbox) {
                if (checkbox.checked) {
                    selectedStores.push(checkbox.value);
                    selectedStoreLabels.push(checkbox.nextElementSibling.textContent.trim());
                }
            });

            selectedStores.sort();
            selectedStoreLabels.sort();

            updateSelectedItemsDisplay(selectedStoreLabels);

            var hiddenField = document.getElementById('selectedStores');
            if (hiddenField) {
                hiddenField.value = selectedStores.length ? selectedStores.join(',') : '';
            }

            reorderCheckboxes();
        }

        function updateSelectedItemsDisplay(selectedStoreLabels) {
            var container = document.getElementById('searchBoxStore');
            container.innerHTML = '';

            if (selectedStoreLabels.length > 3) {
                var countItem = document.createElement('span');
                countItem.className = 'selected-item';
                countItem.textContent = selectedStoreLabels.length + ' Branches Selected';
                container.appendChild(countItem);
            } else {
                selectedStoreLabels.forEach(function (label) {
                    var item = document.createElement('span');
                    item.className = 'selected-item';
                    item.innerHTML = label + ' <span class="remove-item" data-store-label="' + label + '">x</span>';
                    container.appendChild(item);
                });
            }

           if (selectedStoreLabels.length === 0) {
                container.setAttribute('placeholder', 'ALL Branches');
            } else {
                container.removeAttribute('placeholder');
            }
        }

        function reorderCheckboxes() {
            var dropdown = document.querySelector('.multi-select-dropdown2 .dropdown-menu');
            var formChecks = Array.from(document.querySelectorAll('.multi-select-dropdown2 .form-check'));

            formChecks.sort(function (a, b) {
                var aChecked = a.querySelector('.form-check-input').checked;
                var bChecked = b.querySelector('.form-check-input').checked;
                return bChecked - aChecked;
            });

            formChecks.forEach(function (formCheck) {
                dropdown.appendChild(formCheck);
            });
        }

        document.addEventListener('change', function (e) {
            if (e.target.matches('.multi-select-dropdown2 .form-check-input')) {
                updateSelectedStores();
            }
        });

        updateSelectedStores();

        document.addEventListener('input', function (e) {
            if (e.target.id === 'searchBoxStore') {
                var searchValue = e.target.textContent.toLowerCase();
                var formChecks = document.querySelectorAll('.multi-select-dropdown2 .form-check');

                formChecks.forEach(function (formCheck) {
                    var label = formCheck.querySelector('.form-check-label');
                    var labelText = label.textContent || label.innerText;
                    if (labelText.toLowerCase().includes(searchValue)) {
                        formCheck.style.display = "";
                    } else {
                        formCheck.style.display = "none";
                    }
                });
            }
        });

        document.addEventListener('click', function (event) {
            var dropdownMenu = document.querySelector('.multi-select-dropdown2 .dropdown-menu');
            var searchBox = document.getElementById('searchBoxStore');

            if (!dropdownMenu.contains(event.target) && !searchBox.contains(event.target)) {
                dropdownMenu.style.display = 'none';
                updateSelectedStores();
            }
        });

        document.getElementById('searchBoxStore').addEventListener('click', function () {
            var dropdownMenu = document.querySelector('.multi-select-dropdown2 .dropdown-menu');
            initialSearchContent = this.innerHTML; // Save the initial content
            this.innerHTML = ''; // Clear the search box

            if (dropdownMenu.style.display === "none" || dropdownMenu.style.display === "") {
                dropdownMenu.style.display = "block";
                reorderCheckboxes();
            } else {
                dropdownMenu.style.display = "none";
                updateSelectedStores();
            }

            // Show all items when the search box is clicked
            var formChecks = document.querySelectorAll('.multi-select-dropdown2 .form-check');
            formChecks.forEach(function (formCheck) {
                formCheck.style.display = "";
            });
        });

        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-item')) {
                var storeLabel = e.target.getAttribute('data-store-label');
                var checkboxes = document.querySelectorAll('.multi-select-dropdown2 .form-check-input');
                checkboxes.forEach(function (checkbox) {
                    if (checkbox.nextElementSibling.textContent.trim() === storeLabel) {
                        checkbox.checked = false;
                    }
                });
                updateSelectedStores();
            }
        });

        document.addEventListener('click', function (event) {
            var searchBox = document.getElementById('searchBoxStore');
            if (!searchBox.contains(event.target)) {
                updateSelectedStores(); // Restore selected items display when clicking outside the search box
            }
        });
    </script>    <script>
    function updateSelectedDepartments() {
    var departmentCheckboxes = document.querySelectorAll('.department-dropdown .form-check-input');
    var selectedDepartments = [];
    var selectedDepartmentLabels = [];

    departmentCheckboxes.forEach(function (checkbox) {
        if (checkbox.checked) {
            selectedDepartments.push(checkbox.value); // Collecting the value attributes of selected checkboxes
            selectedDepartmentLabels.push(checkbox.nextElementSibling.textContent.trim()); // Collecting the label text
        }
    });

    // Sort the arrays to maintain a consistent order regardless of selection sequence
    selectedDepartments.sort();
    selectedDepartmentLabels.sort();

    // Update the display of selected items in the search box
    updateSelectedDepartmentsDisplay(selectedDepartmentLabels);

    // Optionally, update the 'selectedDepartment' hidden field with the joined string of selected department values
    var hiddenField = document.getElementById('selectedDepartment');
    if (hiddenField) {
        hiddenField.value = selectedDepartments.length ? selectedDepartments.join(',') : '';
    }

    // Reorder checkboxes in the dropdown
    reorderDepartmentCheckboxes();
}

function updateSelectedDepartmentsDisplay(selectedDepartmentLabels) {
    var container = document.getElementById('searchBoxdp');
    container.innerHTML = ''; // Clear the current display

    if (selectedDepartmentLabels.length > 2) {
        // Display the count if there are more than 2 selected items
        var countItem = document.createElement('span');
        countItem.className = 'selected-item';
        countItem.textContent = selectedDepartmentLabels.length + ' items selected';
        container.appendChild(countItem);
    } else {
        // Display individual selected items if there are 2 or fewer
        selectedDepartmentLabels.forEach(function (label) {
            var item = document.createElement('span');
            item.className = 'selected-item';
            item.innerHTML = label + ' <span class="remove-item" data-department-label="' + label + '">x</span>';
            container.appendChild(item);
        });
    }

    // Add a placeholder text if the container is empty
    if (selectedDepartmentLabels.length === 0) {
        container.innerHTML = '<span class="placeholder">All Categories</span>';
    }
}

function reorderDepartmentCheckboxes() {
    var dropdown = document.querySelector('.department-dropdown .dropdown-menu');
    var formChecks = Array.from(document.querySelectorAll('.department-dropdown .form-check'));

    // Sort checkboxes: checked ones first
    formChecks.sort(function (a, b) {
        var aChecked = a.querySelector('.form-check-input').checked;
        var bChecked = b.querySelector('.form-check-input').checked;
        return bChecked - aChecked; // bChecked comes before aChecked
    });

    // Append sorted checkboxes back to the dropdown
    formChecks.forEach(function (formCheck) {
        dropdown.appendChild(formCheck);
    });
}

// Attach event listeners to each checkbox for immediate feedback using event delegation
document.addEventListener('change', function (e) {
    if (e.target.matches('.department-dropdown .form-check-input')) {
        updateSelectedDepartments();
    }
});

// Initial update in case any checkboxes were pre-selected
updateSelectedDepartments();

// Department Search using event delegation
document.addEventListener('input', function (e) {
    if (e.target.id === 'searchBoxdp') {
        var searchValue = e.target.textContent.toLowerCase();
        var formChecks = document.querySelectorAll('.department-dropdown .form-check');

        formChecks.forEach(function (formCheck) {
            var label = formCheck.querySelector('.form-check-label');
            var labelText = label.textContent || label.innerText;
            if (labelText.toLowerCase().includes(searchValue)) {
                formCheck.style.display = ""; // Show the form-check if the label matches the search criteria
            } else {
                formCheck.style.display = "none"; // Hide the form-check if the label doesn't match
            }
        });
    }
});

// Click outside to close dropdown
document.addEventListener('click', function (event) {
    var dropdownMenu = document.querySelector('.department-dropdown .dropdown-menu');
    var searchBox = document.getElementById('searchBoxdp');

    // Check if the click occurred outside the dropdown menu and search box
    if (!dropdownMenu.contains(event.target) && !searchBox.contains(event.target)) {
        dropdownMenu.style.display = 'none';
    }
});

// Toggle dropdown visibility on search box click
document.getElementById('searchBoxdp').addEventListener('click', function () {
    var dropdownMenu = document.querySelector('.department-dropdown .dropdown-menu');
    if (dropdownMenu.style.display === "none" || dropdownMenu.style.display === "") {
        dropdownMenu.style.display = "block";
        reorderDepartmentCheckboxes(); // Reorder checkboxes each time the dropdown is opened
    } else {
        dropdownMenu.style.display = "none";
    }
});

// Handle removal of selected items
document.addEventListener('click', function (e) {
    if (e.target.classList.contains('remove-item')) {
        var departmentLabel = e.target.getAttribute('data-department-label');
        var checkboxes = document.querySelectorAll('.department-dropdown .form-check-input');
        checkboxes.forEach(function (checkbox) {
            if (checkbox.nextElementSibling.textContent.trim() === departmentLabel) {
                checkbox.checked = false;
            }
        });
        updateSelectedDepartments();
    }
});

// Handle label click to toggle checkbox
document.addEventListener('click', function (e) {
    if (e.target.matches('.department-dropdown .form-check-label')) {
        var checkbox = document.getElementById(e.target.getAttribute('for'));
        if (checkbox) {
            checkbox.checked = !checkbox.checked;
            updateSelectedDepartments();
        }
    }
});

</script>
</body>
</html>